

            Class Solution{
                public ListNode addTwoNumbers(ListNodeL1, ListNodeL2){
                
                ListNode dummyHead = newListNode(0); 
                #Initiaise current node to dummy head of the returning list.
                ListNode curr = dummyHead;
                #Initialise carry to 0 
                int carry = 0;
                #Loop through the Lists L1 and L2 until you reach both ends and carry is 0
                while(L1 != null || L2 != null || carry != 0){
                #Set x to node L1 value, If L1 has reached the end of L1, set to 0. Set y to node L2 value, If has reached the end of L2, set to 0.
                    int x = (L1 != null)?L1.val:0;
                    int y = (L2 != null)?L2.val:0;
                    #Set sum = x + y + carry 
                    int sum = carry + x + y;
                    #Update carry = sum/10
                    carry = sum/10;
                    #Create a new node with the digit value of(Sum and 10) and set it to current node's next, then advance current node to next.
                    curr.next = newListNode(sum%10);
                    curr = curr.next;
                    #Advance both L1 and L2
                    if(L1 != null)
                        L1 = L1.next;
                    if(L2 != null)
                        L2 = L2.next;
                    }
                    #Return dummy Head's next node
                    return dummyHead.next;
                    }}
                  
